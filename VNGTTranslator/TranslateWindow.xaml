<Window x:Class="VNGTTranslator.TranslateWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vngtTranslator="clr-namespace:VNGTTranslator"
        xmlns:p="clr-namespace:VNGTTranslator.Properties"
        mc:Ignorable="d"
        hc:WindowAttach.IsDragElement="True"
        WindowStyle="None" AllowsTransparency="True"
        Title="TranslateWindow"
        ResizeMode="NoResize"
        Background="Black"
        d:DataContext="{d:DesignInstance Type=vngtTranslator:TranslateWindow , IsDesignTimeCreatable=True}"
        MinHeight="32" Height="450" Width="800" MinWidth="380">
    <Window.BorderBrush>
        <SolidColorBrush>Red</SolidColorBrush>
    </Window.BorderBrush>
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0" />
    </WindowChrome.WindowChrome>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Height="32">
            <Grid.Resources>
                <Style TargetType="StackPanel">
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="Orientation" Value="Horizontal" />
                </Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Height" Value="32" />
                    <Setter Property="Width" Value="32" />
                    <Setter Property="FontSize" Value="16" />
                    <Setter Property="Foreground" Value="PapayaWhip" />
                </Style>
                <Style TargetType="ToggleButton">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Height" Value="32" />
                    <Setter Property="Width" Value="32" />
                    <Setter Property="FontSize" Value="16" />
                    <Setter Property="Foreground" Value="PapayaWhip" />
                </Style>
            </Grid.Resources>
            <StackPanel HorizontalAlignment="Left">
                <ToggleButton IsChecked="{Binding IsTransparent}"
                              Click="BtnLock_OnClick"
                              ToolTip="{x:Static p:Localization.TranslateWindow_Text_Transparent}">
                    <ToggleButton.Content>
                        <fa:IconBlock Icon="MousePointer" />
                    </ToggleButton.Content>
                </ToggleButton>
                <ToggleButton Click="BtnAllowSizeChange_OnClick"
                              ToolTip="{x:Static p:Localization.TranslateWindow_Text_AllowResizeWindow}">
                    <ToggleButton.Content>
                        <fa:IconBlock Icon="Expand" />
                    </ToggleButton.Content>
                </ToggleButton>
                <ToggleButton IsChecked="True"
                              Click="BtnToggleOnTop_OnClick"
                              ToolTip="{x:Static p:Localization.TranslateWindow_Text_ToggleOnTop}">
                    <ToggleButton.Content>
                        <fa:IconBlock Icon="MapPin" />
                    </ToggleButton.Content>
                </ToggleButton>
            </StackPanel>
            <StackPanel HorizontalAlignment="Center">
                <Button Click="BtnPause_OnClick"
                        ToolTip="{x:Static p:Localization.TranslateWindow_Text_PauseOrResumeTranslator}">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <fa:IconBlock Icon="Pause" />
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding PauseState}" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <fa:IconBlock Icon="Play" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Click="BtnReTranslate_OnClick"
                        ToolTip="{x:Static p:Localization.TranslateWindow_Text_ReTranslate}">
                    <Button.Content>
                        <fa:IconBlock Icon="Repeat" />
                    </Button.Content>
                </Button>
                <Button Click="BtnShowSourceText_OnClick"
                        ToolTip="{x:Static p:Localization.TranslateWindow_Text_ShowSourceText}">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <fa:IconBlock Icon="EyeSlash" />
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsShowSourceText}" Value="False">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <fa:IconBlock Icon="Eye" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Click="BtnHistory_OnClick"
                        ToolTip="{x:Static p:Localization.TranslateWindow_Text_ShowHistory}">
                    <Button.Content>
                        <fa:IconBlock Icon="History" />
                    </Button.Content>
                </Button>
                <Button Click="BtnSelectHookCode_OnClick"
                        ToolTip="{x:Static p:Localization.TranslateWindow_Text_SelectHookCode}">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsHookMode}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Setter Property="Width" Value="0" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Button.Content>
                        <fa:IconBlock Icon="ListAlt" />
                    </Button.Content>
                </Button>
                <Button Click="BtnSetting_OnClick" ToolTip="{x:Static p:Localization.TranslateWindow_Text_Setting}">
                    <Button.Content>
                        <fa:IconBlock Icon="Cog" />
                    </Button.Content>
                </Button>
                <Button Click="BtnReadAloud_OnClick"
                        ToolTip="{x:Static p:Localization.TranslateWindow_Text_ReadAloud}">
                    <Button.Content>
                        <fa:IconBlock Icon="Microphone" />
                    </Button.Content>
                </Button>
                <Button Click="BtnSelectProcess_OnClick"
                        ToolTip="{x:Static p:Localization.TranslateWindow_Text_SelectProcess}">
                    <Button.Content>
                        <fa:IconBlock Icon="Microchip" />
                    </Button.Content>
                </Button>
            </StackPanel>
            <StackPanel HorizontalAlignment="Right">
                <Button Click="BtnMinimizeWindow_OnClick"
                        ToolTip="{x:Static p:Localization.TranslateWindow_Text_MinimizeWindow}">
                    <Button.Content>
                        <fa:IconBlock Icon="WindowMinimize" />
                    </Button.Content>
                </Button>
                <Button Click="BtnExit_OnClick"
                        ToolTip="{x:Static p:Localization.TranslateWindow_Text_Exit}">
                    <Button.Content>
                        <fa:IconBlock Icon="WindowClose" />
                    </Button.Content>
                </Button>
            </StackPanel>
        </Grid>
        <StackPanel Grid.Row="1" Margin="10" Orientation="Vertical">
            <hc:OutlineText Text="{Binding SourceText , Mode=OneWay}"
                            d:Text="Wait source text"
                            d:Fill="White"
                            Fill="{Binding SourceTextColor}" Stroke="Beige" StrokeThickness="1"
                            Effect="{Binding SourceTextEffect}"
                            FontFamily="{Binding  SourceFontFamily}"
                            FontSize="{Binding SourceFontSize}"
                            Margin="10,0,10,10" TextWrapping="Wrap" StrokePosition="Outside">
                <hc:OutlineText.Style>
                    <Style TargetType="hc:OutlineText">
                        <Setter Property="Visibility" Value="Visible" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsShowSourceText}" Value="False">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </hc:OutlineText.Style>
            </hc:OutlineText>
            <ItemsControl ItemsSource="{Binding UseTranslateProviderDataContexts}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <hc:OutlineText Text="{Binding TranslatedText}"
                                        Fill="{Binding  ProviderTextColor}" Stroke="Beige"
                                        Effect="{Binding ProviderTextEffect}"
                                        FontSize="{Binding ProviderTextSize}"
                                        FontFamily="{Binding ProviderFontFamily}"
                                        StrokeThickness="1"
                                        Margin="10,0,10,10" TextWrapping="Wrap" StrokePosition="Outside" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </StackPanel>
    </Grid>
</Window>